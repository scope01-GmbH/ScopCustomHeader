{% sw_extends '@Storefront/storefront/base.html.twig' %}

{% set config_params = page.header.extensions['ScopCH'] %}

{# Custom styles #}
{% block base_head %}
    <style>

        {% if config_params.background or config_params.height  %}
        .custom-header-wrapper{
        {% if config_params.background  %}
            background-color:{{ config_params.background }};
        {% endif %}
        {% if config_params.height %}
            min-height:{{ config_params.height ~ 'px' }};
        {% endif %}
        }
        {% endif %}

        {% if  config_params.textFontSize %}
        .custom-header{
            font-size: {{ config_params.textFontSize ~ 'px'}};
        }
        {% endif %}

        /*Elements Box*/
        {% if config_params.paddingTop or config_params.paddingRight or config_params.paddingBottom or config_params.paddingLeft %}
        .custom-header-wrapper .custom-header .element{
        {% if  config_params.paddingTop %}
            padding-top: {{ config_params.paddingTop ~ 'px' }};
        {% endif  %}

        {% if  config_params.paddingRight %}
            padding-right: {{ config_params.paddingRight ~ 'px' }};
        {% endif  %}

        {% if  config_params.paddingBottom %}
            padding-bottom: {{ config_params.paddingBottom ~ 'px' }};
        {% endif  %}

        {% if  config_params.paddingLeft %}
            padding-left: {{ config_params.paddingLeft ~ 'px' }};
        {% endif  %}
        }
        {% endif %}

        /* All Texts */
        {% if config_params.textColor or config_params.textFontSize %}
        .custom-header-wrapper .custom-header .element .scop-header-link{
        {% if config_params.textColor %}
            color: {{ config_params.textColor }};
        {% endif %}

        {% if config_params.textFontSize  %}
            font-size: {{ config_params.textFontSize ~ 'px' }};
        {% endif %}
        }
        {% endif %}

        /* Text Hover */
        {% if config_params.hover  %}
          a.scop-header-link:hover{
            color: {{ config_params.hover }} !important;
        }
        {% endif %}
        /* Mobile version */

        @media screen and (max-width: 768px){

        {% if config_params.mobileBreakpointDisplay %}
            .custom-header-wrapper{
                display: none;
            }
        {% endif %}


        {% if config_params.paddingTopMobile or config_params.paddingRightMobile or config_params.paddingBottomMobile or config_params.paddingLeftMobile %}
            .custom-header-wrapper .custom-header .element{
            {% if config_params.paddingTopMobile %}
                padding-top: {{ config_params.paddingTopMobile ~ 'px' }};
            {% endif %}

            {% if config_params.paddingRightMobile %}
                padding-right: {{ config_params.paddingRightMobile ~ 'px' }};
            {% endif %}

            {% if config_params.paddingBottomMobile %}
                padding-bottom: {{ config_params.paddingBottomMobile ~ 'px' }};
            {% endif %}

            {% if config_params.paddingLeftMobile %}
                padding-left: {{ config_params.paddingLeftMobile ~ 'px' }};
            {% endif %}
            }
        {% endif %}

        {% if config_params.textFontSizeMobile %}
            .custom-header-warpper .custom-header .element .scop-header-link{
                font-size: {{ config_params.textFontSizeMobile ~ 'px' }};
            }
        {% endif %}

            .scop-text-left{
                display: {% if config_params.displayTextLeft == false %}none {% else %} block {% endif %};
            }
            .scop-text-middle{
                display: {% if config_params.displayTextMiddle == false %}none {% else %} block {% endif %};
            }
            .scop-text-right{
                display: {% if config_params.displayTextRight == false %}none {% else %} block {% endif %};
            }
        }
    </style>
    {{ parent() }}

{% endblock %}

{% block base_header %}
    {% if config_params.left or config_params.middle or config_params.right %}

        <div class="custom-header-wrapper  ">
            {# Wrapping the content of the header in container #}

            <div class="container">
                <div class="custom-header ">
                    <!--LEFT TEXT-->
                    <div class="element scop-text-left">
                                <span class="icon">
                                    {% if config_params.iconLeft != null %}
                                        <div class="img-wrap" >
                                            {% if config_params.imgArray[0] != null %}
                                                <img src="{{ config_params.imgArray[0] }}" alt="ICON" class="sch-icon">
                                            {% endif %}
                                        </div>
                                    {% endif %}
                                </span>
                        <span>
                                    <a class="scop-header-link " href="{{ config_params.textLinkLeft }}" target="_blank"> {{  config_params.left }} </a>
                                </span>
                    </div>

                    {#    Middle TEXT #}
                    <div class="element scop-text-middle">
                                <span class="icon">
                                     <div class="img-wrap">
                                         {% if config_params.imgArray[1] != null %}
                                             <img src="{{ config_params.imgArray[1] }}" alt="ICON" class="sch-icon">
                                         {% endif %}
                                     </div>
                                </span>
                        <span>
                                    <a class="scop-header-link " href="{{ config_params.textLinkMiddle }}" target="_blank"> {{  config_params.middle }} </a>
                                </span>
                    </div>

                    {#    Right TEXT #}
                    <div class="element scop-text-right">
                                <span class="icon">
                                    <div class="img-wrap">
                                        {% if config_params.imgArray[2] != null %}
                                            <img src="{{ config_params.imgArray[2] }}" alt="ICON" class="sch-icon">
                                        {% endif %}
                                    </div>
                                </span>
                        <span>
                                    <a class="scop-header-link " href="{{ config_params.textLinkRight }}" target="_blank"> {{  config_params.right }} </a>
                                </span>
                    </div>

                </div>
            </div>

        </div>
    {% endif %}
    {{ parent() }}
{% endblock %}
