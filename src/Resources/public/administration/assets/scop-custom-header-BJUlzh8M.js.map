{"version":3,"file":"scop-custom-header-BJUlzh8M.js","sources":["../../../app/administration/src/module/scop_custom_header/page/scop-custom-header-details/state.js","../../../app/administration/src/module/scop_custom_header/page/scop-custom-header-list/scop-custom-header-list.html.twig","../../../app/administration/src/module/scop_custom_header/page/scop-custom-header-list/index.js","../../../app/administration/src/module/scop_custom_header/page/scop-custom-header-details/scop-custom-header-details.html.twig","../../../app/administration/src/module/scop_custom_header/page/scop-custom-header-details/index.js","../../../app/administration/src/module/scop_custom_header/view/scop-custom-header-details-base/scop-custom-header-details-base.html.twig","../../../app/administration/src/module/scop_custom_header/view/scop-custom-header-details-base/index.js","../../../app/administration/src/module/scop_custom_header/view/scop-custom-header-details-columns/scop-custom-header-details-columns.html.twig","../../../app/administration/src/module/scop_custom_header/view/scop-custom-header-details-columns/index.js","../../../app/administration/src/module/scop_custom_header/component/scop-custom-header-column-component/scop-custom-header-column-component.html.twig","../../../app/administration/src/module/scop_custom_header/component/scop-custom-header-column-component/index.js","../../../app/administration/src/module/scop_custom_header/index.js","../../../app/administration/src/component/scop-customheader-config-information/scop-customheader-config-information.html.twig","../../../app/administration/src/component/scop-customheader-config-information/index.js"],"sourcesContent":["export default {\n    namespaced: true,\n\n    state() {\n        return {\n            header: null,\n            isLoading: false,\n            highlightInvalidColumns: false\n        };\n    },\n\n    mutations: {\n        setHeader(state, header) {\n            state.header = header;\n        },\n        setIsLoading(state, isLoading) {\n            state.isLoading = isLoading;\n        },\n        setHighlightInvalidColumns(state, highlightInvalidColumns) {\n            state.highlightInvalidColumns = highlightInvalidColumns;\n        },\n    },\n};\n","{% block scop_custom_header_list %}\n    <sw-page class=\"scop-custom-header-list\">\n        <template #smart-bar-actions>\n            {% block scop_custom_header_list_smarbar %}\n                <mt-button variant=\"primary\" :routerLink=\"{name: 'scop.custom.header.create'}\">\n                    {{ $t('scopcustomheader.list.createButton') }}\n                </mt-button>\n            {% endblock %}\n        </template>\n        <template #content>\n            {% block scop_custom_header_list_content %}\n                <sw-entity-listing\n                        v-if=\"header\"\n                        :items=\"header\"\n                        :repository=\"repository\"\n                        :columns=\"columns\"\n                        detailRoute=\"scop.custom.header.details\"\n                        @update-records=\"onUpdate\"\n                >\n                    <template #column-salesChannel=\"{ item }\">\n                        {{ item.salesChannel ? item.salesChannel.translated.name : $tc('scopcustomheader.list.allSalesChannels') }}\n                    </template>\n                </sw-entity-listing>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n","import template from './scop-custom-header-list.html.twig';\n\nconst Criteria = Shopware.Data.Criteria;\n\nconst {Mixin} = Shopware;\n\nShopware.Component.register('scop-custom-header-list', {\n    template,\n\n    inject: [\n        'repositoryFactory', 'syncService', 'loginService'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            repository: null,\n            header: null,\n            noHeader: true,\n            page: 1,\n            limit: 25\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    computed: {\n        columns() {\n            return [{\n                property: 'label',\n                dataIndex: 'label',\n                label: this.$tc('scopcustomheader.list.label'),\n                routerLink: 'scop.custom.header.details',\n                inlineEdit: 'string',\n                allowResize: true,\n                primary: true\n            }, {\n                property: 'enabled',\n                dataIndex: 'enabled',\n                label: this.$tc('scopcustomheader.list.columnEnabled'),\n                inlineEdit: 'boolean'\n            },\n                {\n                    property: 'salesChannel',\n                    dataIndex: 'salesChannel',\n                    label: this.$tc('scopcustomheader.list.salesChannel'),\n                    allowResize: true\n                },\n            ];\n        }\n    },\n\n    created() {\n        this.repository = this.repositoryFactory.create('scop_custom_header');\n\n        let criteria = new Criteria(this.page, this.limit);\n        criteria.addAssociation('salesChannel');\n\n        this.repository.search(criteria, Shopware.Context.api).then((result) => {\n            this.header = result;\n        });\n    },\n\n    methods: {\n        updateList() {\n            const criteria = this.header.criteria;\n\n            this.repository.search(criteria, Shopware.Context.api).then((result) => {\n                this.header = result;\n            });\n        },\n\n        onUpdate(records) {\n            this.noHeader = records.length === 0;\n        },\n    },\n\n});\n","{% block scop_custom_header_details %}\n    <sw-page class=\"scop-custom-header-details\">\n\n        {% block sw_product_detail_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ placeholder(header, 'label', $tc('scopcustomheader.detail.newHeader')) }}\n                </h2>\n            </template>\n        {% endblock %}\n        <template #language-switch>\n            <sw-language-switch\n                    :save-changes-function=\"saveOnLanguageChange\"\n                    :abort-change-function=\"abortOnLanguageChange\"\n                    :disabled=\"!headerId\"\n                    @on-change=\"onChangeLanguage\"/>\n        </template>\n        <template #smart-bar-actions>\n            <mt-button variant=\"secondary\" @click=\"$router.push({name: 'scop.custom.header.list'})\">\n                {{ $t('scopcustomheader.detail.cancelButton') }}</mt-button>\n            <sw-button-process :isLoading=\"isLoading\"\n                               :processSuccess=\"processSuccess\" variant=\"primary\"\n                               @update:processSuccess=\"saveFinish\" @click=\"onClickSave\">\n                {{ $t('scopcustomheader.detail.saveButton') }}</sw-button-process>\n        </template>\n        <template #content>\n            <sw-card-view>\n                <sw-language-info\n                        :entity-description=\"placeholder(header, 'label', $tc('scopcustomheader.detail.newHeader'))\"\n                        :is-new-entity=\"!headerId\"\n                />\n                <sw-tabs\n                        v-if=\"!isCreateMode\"\n                        position-identifier=\"scop-custom-header-details\"\n                >\n                    <sw-tabs-item\n                            :route=\"{ name: 'scop.custom.header.details.base', params: { id: $route.params.id } }\"\n                            :title=\"$tc('scopcustomheader.detail.tabs.tabGeneral')\"\n                    >\n                        {{ $tc('scopcustomheader.detail.tabs.tabGeneral') }}\n                    </sw-tabs-item>\n\n                    <sw-tabs-item\n                            :route=\"{ name: 'scop.custom.header.details.columns', params: { id: $route.params.id } }\"\n                            :title=\"$tc('scopcustomheader.detail.tabs.tabColumns')\"\n                            :hasError=\"highlightInvalidColumns\"\n                    >\n                        {{ $tc('scopcustomheader.detail.tabs.tabColumns') }}\n                    </sw-tabs-item>\n\n                </sw-tabs>\n\n                <div\n                        v-if=\"isLoading\"\n                >\n                    <sw-skeleton/>\n                    <sw-skeleton/>\n                    <sw-skeleton/>\n                </div>\n\n                <template v-else>\n                    <router-view v-slot=\"{ Component }\">\n                        <component\n                                :is=\"Component\"\n                                :header=\"header\"\n                                :is-create-mode=\"isCreateMode\"\n                        ></component>\n                    </router-view>\n                </template>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n","import template from './scop-custom-header-details.html.twig';\n\nconst {Component, Mixin, State} = Shopware;\nconst {Criteria} = Shopware.Data;\n\nComponent.register('scop-custom-header-details', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'entityValidationService'\n    ],\n\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder')\n    ],\n\n    props: {\n        headerId: {\n            type: String,\n            required: false,\n            default() {\n                return null;\n            },\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    data() {\n        return {\n            header: null,\n            isLoading: false,\n            processSuccess: false,\n        };\n    },\n\n    watch: {\n        headerId() {\n            this.getHeader();\n        }\n    },\n\n    created() {\n        if (this.isCreateMode) {\n            if (!State.getters['context/isSystemDefaultLanguage']) {\n                State.commit('context/resetLanguageToDefault');\n            }\n        }\n        this.getHeader();\n    },\n\n    computed: {\n        isCreateMode() {\n            return this.$route.name === 'scop.custom.header.create.base';\n        },\n\n        headerRepository() {\n            return this.repositoryFactory.create('scop_custom_header');\n        },\n        highlightInvalidColumns: {\n            get() {\n                return State.get('scopHeaderDetail').highlightInvalidColumns;\n            },\n            set(isLoading) {\n                State.commit('scopHeaderDetail/setHighlightInvalidColumns', isLoading);\n            },\n        }\n    },\n\n    methods: {\n        getHeader() {\n            this.isLoading = true;\n\n\n            if (!this.headerId) {\n                this.header = this.headerRepository.create();\n\n                //Default values\n                this.header.label = \"\";\n                this.header.priority = 1;\n                this.header.height = 10;\n                this.header.background = \"#ffffff\";\n                this.header.textFontSize = 10;\n                this.header.textColor = \"#000000\";\n                this.header.hover = \"#14b79f\";\n                this.header.paddingTop = 10;\n                this.header.paddingBottom = 10;\n                this.header.paddingLeft = 10;\n                this.header.paddingRight = 10;\n                this.header.mobileCarouselSpeed = 5;\n\n                this.isLoading = false;\n\n                return;\n            }\n\n            this.loadEntity();\n\n        },\n\n        loadEntity() {\n            const criteria = (new Criteria(1, 1)).addAssociation('columns');\n\n            criteria.getAssociation('columns').addSorting(Criteria.sort('createdAt', 'ASC'));\n\n            if (!this.headerId) {\n                return;\n            }\n\n            return this.headerRepository.get(this.headerId, Shopware.Context.api, criteria).then((header) => {\n\n                if (header === null) {\n                    return;\n                }\n\n                this.header = header;\n\n                if (!this.header || !this.header.columns || this.header.length < 1) {\n                    return;\n                }\n\n                State.commit('scopHeaderDetail/setHeader', this.header);\n\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n\n        onClickSave() {\n            if (!this.headerId) {\n                this.createHeader();\n                return;\n            }\n\n            this.saveHeader();\n        },\n\n        createHeader() {\n            return this.saveHeader().then(() => {\n                if (this.processSuccess)\n                    this.$router.push({name: 'scop.custom.header.details', params: {id: this.header.id}})\n            })\n        },\n\n        saveHeader() {\n            this.isLoading = true;\n\n            if (!this.entityValidationService.validate(this.header)) {\n                const titleSaveError = this.$tc('global.default.error');\n                const messageSaveError = this.$tc(\n                    'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                );\n\n                this.createNotificationError({\n                    title: titleSaveError,\n                    message: messageSaveError,\n                });\n\n                this.isLoading = false;\n                return Promise.resolve();\n            }\n\n            for (let column of this.header.columns) {\n                if ((column.translated.label == null || column.translated.label === '') && (column.label == null || column.label === '') && column.translated.iconId == null && column.iconId == null) {\n                    const titleSaveError = this.$tc('global.default.error');\n                    const messageSaveError = this.$tc('scopcustomheader.detail.columns.invalidSave');\n\n                    this.createNotificationError({\n                        title: titleSaveError,\n                        message: messageSaveError,\n                    });\n\n                    this.isLoading = false;\n                    this.highlightInvalidColumns = true;\n                    return Promise.resolve();\n                }\n            }\n            this.highlightInvalidColumns = false;\n\n            return this.headerRepository.save(this.header).then(() => { //Updating the Header in the Database\n                this.processSuccess = true;\n                this.loadEntity();\n            }).catch((exception) => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    title: this.$tc('scopcustomheader.general.errorTitle'),\n                    message: exception\n                })\n            });\n        },\n\n        saveFinish() {\n            this.processSuccess = false;\n        },\n\n        abortOnLanguageChange() {\n            return this.headerRepository.hasChanges(this.header);\n        },\n\n        saveOnLanguageChange() {\n            return this.saveHeader();\n        },\n\n        onChangeLanguage(languageId) {\n            State.commit('context/setApiLanguageId', languageId);\n            this.getHeader();\n        },\n\n    }\n\n});\n","<div>\n    <sw-card :title=\"$tc('scopcustomheader.detail.general')\" v-if=\"header\" :is-loading=\"isLoading\">\n        <sw-container columns=\"3fr 1fr 1fr\" gap=\"16px\">\n\n            <sw-text-field :label=\"$t('scopcustomheader.detail.label')\" v-model:value=\"header.label\"\n                           validation=\"required\" required :error=\"headerLabelError\"></sw-text-field>\n\n            <sw-number-field :label=\"$t('scopcustomheader.detail.priority')\" v-model:value=\"header.priority\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\"\n                             required :error=\"headerPriorityError\"></sw-number-field>\n\n            <sw-switch-field :label=\"$tc('scopcustomheader.detail.enabledLabel')\"\n                             v-model:value=\"header.enabled\" validation=\"required\" bordered></sw-switch-field>\n\n        </sw-container>\n        <mt-textarea :label=\"$t('scopcustomheader.detail.description')\"\n                           v-model=\"header.description\"></mt-textarea>\n\n        <sw-entity-single-select v-model:value=\"header.salesChannelId\" entity=\"sales_channel\"\n                                 :resetOption=\"$t('scopcustomheader.detail.salesChannel.all')\"\n                                 :label=\"$t('scopcustomheader.detail.salesChannel.select')\"></sw-entity-single-select>\n    </sw-card>\n\n    <sw-card :title=\"$tc('scopcustomheader.detail.settingsDesktop')\" v-if=\"header\" :isLoading=\"isLoading\">\n        <sw-number-field :label=\"$t('scopcustomheader.detail.height')\" v-model:value=\"header.height\" numberType=\"int\"\n                         :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\">\n            <template #suffix>\n                <span>px</span>\n            </template>\n        </sw-number-field>\n\n        <sw-container columns=\"1fr 1fr 1fr\" gap=\"16px\">\n            <mt-colorpicker :label=\"$t('scopcustomheader.detail.backgroundColor')\" v-model=\"header.background\"\n                            colorOutput=\"auto\" :alpha=\"true\" :disabled=\"false\" :colorLabels=\"true\"\n                            zIndex=\"100\"></mt-colorpicker>\n            <mt-colorpicker :label=\"$t('scopcustomheader.detail.hoverColor')\" v-model=\"header.hover\"\n                            colorOutput=\"auto\" :alpha=\"true\" :disabled=\"false\" :colorLabels=\"true\"\n                            zIndex=\"100\"></mt-colorpicker>\n            <mt-colorpicker :label=\"$t('scopcustomheader.detail.textColor')\" v-model=\"header.textColor\"\n                            colorOutput=\"auto\" :alpha=\"true\" :disabled=\"false\" :colorLabels=\"true\"\n                            zIndex=\"100\"></mt-colorpicker>\n        </sw-container>\n\n        <sw-number-field :label=\"$t('scopcustomheader.detail.fontSize')\" v-model:value=\"header.textFontSize\"\n                         numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\">\n            <template #suffix>\n                <span>px</span>\n            </template>\n        </sw-number-field>\n\n        <sw-container columns=\"1fr 1fr 1fr 1fr\" gap=\"16px\">\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingTop')\" v-model:value=\"header.paddingTop\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingRight')\" v-model:value=\"header.paddingRight\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingBottom')\" v-model:value=\"header.paddingBottom\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingLeft')\" v-model:value=\"header.paddingLeft\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :allowEmpty=\"false\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n        </sw-container>\n\n    </sw-card>\n\n    <sw-card :title=\"$tc('scopcustomheader.detail.settingsMobile')\" v-if=\"header\" :isLoading=\"isLoading\">\n\n        <sw-switch-field :label=\"$tc('scopcustomheader.detail.mobileBreakpointCarouselLabel')\"\n                         v-model:value=\"header.mobileBreakpointCarousel\" validation=\"required\"\n                         bordered></sw-switch-field>\n\n        <sw-number-field :label=\"$t('scopcustomheader.detail.mobileCarouselSpeedLabel')\"\n                         v-model:value=\"header.mobileCarouselSpeed\" numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\"\n                         :fillDigits=\"true\" :allowEmpty=\"false\">\n            <template #suffix>\n                <span>s</span>\n            </template>\n        </sw-number-field>\n\n        <sw-number-field :label=\"$t('scopcustomheader.detail.height')\" v-model:value=\"header.heightMobile\"\n                         numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\" :placeholder=\"header.height\">\n            <template #suffix>\n                <span>px</span>\n            </template>\n        </sw-number-field>\n\n        <sw-container columns=\"1fr 1fr 1fr\" gap=\"16px\">\n            <mt-colorpicker :label=\"$t('scopcustomheader.detail.backgroundColor')\"\n                            v-model=\"header.backgroundColorMobile\" colorOutput=\"auto\"\n                            :alpha=\"true\" :disabled=\"false\" :colorLabels=\"true\"\n                            :z-index=\"100\" />\n            <mt-colorpicker :label=\"$t('scopcustomheader.detail.hoverColor')\"\n                            v-model=\"header.hoverColorMobile\"\n                            colorOutput=\"auto\" :alpha=\"true\" :disabled=\"false\" :colorLabels=\"true\"\n                            :z-index=\"100\" />\n            <mt-colorpicker :label=\"$t('scopcustomheader.detail.textColor')\"\n                            v-model=\"header.textColorMobile\"\n                            colorOutput=\"auto\" :alpha=\"true\" :disabled=\"false\" :colorLabels=\"true\"\n                            :z-index=\"100\" />\n        </sw-container>\n\n        <sw-number-field :label=\"$t('scopcustomheader.detail.fontSize')\" v-model:value=\"header.textFontSizeMobile\"\n                         numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\"\n                         :placeholder=\"header.textFontSize\">\n            <template #suffix>\n                <span>px</span>\n            </template>\n        </sw-number-field>\n\n        <sw-container columns=\"1fr 1fr 1fr 1fr\" gap=\"16px\">\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingTop')\" v-model:value=\"header.paddingTopMobile\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\"\n                             :placeholder=\"header.paddingTop\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingRight')\"\n                             v-model:value=\"header.paddingRightMobile\" numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\"\n                             :fillDigits=\"true\" :placeholder=\"header.paddingRight\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingBottom')\"\n                             v-model:value=\"header.paddingBottomMobile\" numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\"\n                             :fillDigits=\"true\" :placeholder=\"header.paddingBottom\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n            <sw-number-field :label=\"$t('scopcustomheader.detail.paddingLeft')\" v-model:value=\"header.paddingLeftMobile\"\n                             numberType=\"int\" :step=\"1\" :min=\"0\" :value=\"1\" :fillDigits=\"true\"\n                             :placeholder=\"header.paddingLeft\">\n                <template #suffix>\n                    <span>px</span>\n                </template>\n            </sw-number-field>\n        </sw-container>\n    </sw-card>\n</div>","import template from './scop-custom-header-details-base.html.twig';\n\nconst {Component, Mixin} = Shopware;\nconst {mapPropertyErrors} = Shopware.Component.getComponentHelper();\n\nComponent.register('scop-custom-header-details-base', {\n    template,\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n    ],\n\n\n    props: {\n        header: {\n            type: Object,\n            required: false,\n            default() {\n                return null;\n            },\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        isCreateMode: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    computed: {\n        ...mapPropertyErrors('header', [\n            'label',\n            'priority'\n        ]),\n    },\n\n    data() {\n        return {\n            processSuccess: false,\n        }\n    }\n\n});\n","<div>\n\n    <ul class=\"scopcustomheader-details-columns__column-list\">\n        <scop-custom-header-column-component\n                v-for=\"column in sortedColumns\"\n                :key=\"column.id\"\n                :header=\"header\"\n                :column=\"column\"\n                :error=\"highlightInvalidColumns && hasError(column)\"\n                @column-delete=\"deleteColumn\"\n        >\n        </scop-custom-header-column-component>\n    </ul>\n\n    <div class=\"scopcustomheader-details-columns__action_add\">\n        <mt-button\n                v-tooltip=\"{\n                        message: $tc('scopcustomheader.detail.columns.buttonAddColumnDisabled'),\n                        disabled: isSystemLanguage,\n                        showOnDisabledElements: true\n                    }\"\n                :disabled=\"!isSystemLanguage\"\n                :is-loading=\"isLoading\" @click=\"onAddColumn\">\n            {{ $tc('scopcustomheader.detail.columns.buttonAddColumn') }}\n        </mt-button>\n    </div>\n\n</div>","import template from './scop-custom-header-details-columns.html.twig';\nimport './scop-custom-header-details-columns.scss';\n\nconst {Component, Mixin, State} = Shopware;\n\nComponent.register('scop-custom-header-details-columns', {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n    ],\n\n    computed: {\n        header() {\n            return State.get('scopHeaderDetail').header;\n        },\n        isLoading: {\n            get() {\n                return State.get('scopHeaderDetail').isLoading;\n            },\n            set(isLoading) {\n                State.commit('scopHeaderDetail/setIsLoading', isLoading);\n            },\n        },\n        highlightInvalidColumns: {\n            get() {\n                return State.get('scopHeaderDetail').highlightInvalidColumns;\n            },\n            set(isLoading) {\n                State.commit('scopHeaderDetail/setHighlightInvalidColumns', isLoading);\n            },\n        },\n        columns() {\n            return State.get('scopHeaderDetail').header &&\n                State.get('scopHeaderDetail').header.columns;\n        },\n\n        sortedColumns() {\n            return [...this.columns].sort((a, b) => a.position - b.position);\n        },\n\n        isSystemLanguage() {\n            console.log(Shopware.Context.api)\n            return Shopware.Context.api.systemLanguageId === Shopware.Context.api.languageId;\n        }\n    },\n\n    methods: {\n        onAddColumn() {\n            const headerColumnRepository = this.repositoryFactory.create(\n                this.columns.entity,\n                this.columns.source,\n            )\n\n            const newColumn = headerColumnRepository.create();\n            newColumn.headerId = this.header.id;\n            newColumn.position = this.columns.length + 1;\n\n            newColumn.showDesktop = true;\n            newColumn.showMobile = true;\n            newColumn.translated = {};\n\n            this.highlightInvalidColumns = false;\n            this.columns.push(newColumn);\n        },\n\n        deleteColumn(column) {\n            if (column.isNew()) {\n                this.columns.remove(column.id);\n                return;\n            }\n\n            this.isLoading = true;\n            const headerColumnRepository = this.repositoryFactory.create(\n                this.columns.entity,\n                this.columns.source,\n            );\n\n            headerColumnRepository.delete(column.id, this.columns.context).then(() => {\n                this.columns.remove(column.id);\n                this.isLoading = false;\n            });\n        },\n\n        sortColumns() {\n            return [...this.columns].sort((a, b) => a.position - b.position);\n        },\n\n        hasError(column) {\n            return (column.translated.label == null || column.translated.label === '') && (column.label == null || column.label === '') && column.translated.iconId == null && column.iconId == null;\n        }\n\n    },\n});\n","<sw-card :title=\"getTitle\" position-identifier=\"scop-custom-header-column-component\"\n         :class=\"error ? 'scop-has--error' : ''\">\n    <sw-context-button class=\"scop-custom-header-column-component__context-button\">\n        <sw-context-menu-item\n                variant=\"danger\"\n                @click=\"onShowDeleteModal\"\n        >\n            {{ $tc('scopcustomheader.detail.columns.buttonDeleteColumn') }}\n        </sw-context-menu-item>\n        <sw-context-menu-item\n                variant=\"default\"\n                v-if=\"!isFirst(column)\"\n                @click=\"onMoveUp(column)\"\n        >\n            {{ $tc('scopcustomheader.detail.columns.buttonMoveUp') }}\n        </sw-context-menu-item>\n        <sw-context-menu-item\n                variant=\"default\"\n                v-if=\"!isLast(column)\"\n                @click=\"onMoveDown(column)\"\n        >\n            {{ $tc('scopcustomheader.detail.columns.buttonMoveDown') }}\n        </sw-context-menu-item>\n    </sw-context-button>\n\n    <sw-container columns=\"1fr 1fr\" gap=\"16px\">\n\n        <sw-text-field :label=\"$t('scopcustomheader.detail.columns.label')\" v-model:value=\"column.label\"\n                       :placeholder=\"column.translated.label\"\n                       validation=\"required\"></sw-text-field>\n\n        <sw-text-field :label=\"$t('scopcustomheader.detail.columns.textLink')\" v-model:value=\"column.textLink\"\n                       :placeholder=\"column.translated.textLink\"\n                       validation=\"required\"></sw-text-field>\n\n    </sw-container>\n\n    <sw-upload-listener\n            :upload-tag=\"column.id\"\n            auto-upload\n            @media-upload-finish=\"setMediaItem\"\n    ></sw-upload-listener>\n\n    <sw-media-upload-v2\n            :source=\"column.iconId\"\n            :allow-multi-select=\"false\"\n            :upload-tag=\"column.id\"\n            :label=\"$t('scopcustomheader.detail.columns.mediaUpload')\"\n            @sw-media-upload-v2-media-upload-success=\"setMediaItem\"\n            @media-drop=\"onDropMedia\"\n            @media-upload-sidebar-open=\"onOpenMediaModal\"\n            @media-upload-remove-image=\"onUnlinkIcon\"\n    ></sw-media-upload-v2>\n\n    <sw-media-modal-v2\n            v-if=\"mediaModalIsOpen\"\n            variant=\"full\"\n            :allow-multi-select=\"false\"\n            @media-upload-remove-image=\"onImageRemove\"\n            @media-modal-selection-change=\"onSelectionChanges\"\n            @modal-close=\"onCloseModal\"\n    ></sw-media-modal-v2>\n\n    <sw-switch-field :label=\"$t('scopcustomheader.detail.columns.openInNewTab')\"\n                     v-model:value=\"column.openInNewTab\" validation=\"required\"></sw-switch-field>\n\n    <sw-checkbox-field v-model:value=\"column.showDesktop\"\n                       :label=\"$t('scopcustomheader.detail.columns.showDesktopLabel')\"></sw-checkbox-field>\n\n    <br />\n\n    <sw-checkbox-field v-model:value=\"column.showMobile\"\n                       :label=\"$t('scopcustomheader.detail.columns.showMobileLabel')\"></sw-checkbox-field>\n\n\n    <sw-modal\n            v-if=\"showDeleteModal\"\n            variant=\"small\"\n            :title=\"$tc('scopcustomheader.detail.columns.delete.confirmTitle')\"\n            @modal-close=\"onCloseDeleteModal\"\n    >\n        <p>\n            {{ $tc('scopcustomheader.detail.columns.delete.confirmText') }}\n        </p>\n\n        <template #modal-footer>\n            <mt-button\n                    variant=\"secondary\"\n                    size=\"small\"\n                    @click=\"onCloseDeleteModal\"\n            >\n                {{ $tc('scopcustomheader.detail.columns.delete.buttonCancel') }}\n            </mt-button>\n\n            <mt-button\n                    size=\"small\"\n                    variant=\"critical\"\n                    @click=\"onConfirmDelete\"\n            >\n                {{ $tc('scopcustomheader.detail.columns.delete.buttonDelete') }}\n            </mt-button>\n        </template>\n    </sw-modal>\n\n\n</sw-card>","import template from './scop-custom-header-column-component.html.twig';\nimport './scop-custom-header-column-component.scss';\n\nShopware.Component.register('scop-custom-header-column-component', {\n    template,\n\n    inject: [\n        'repositoryFactory'\n    ],\n\n    props: {\n        header: {\n            type: Object,\n            required: true,\n        },\n        column: {\n            type: Object,\n            required: true,\n        },\n        error: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    data() {\n        return {\n            isLoading: false,\n            mediaItem: null,\n            mediaModalIsOpen: false,\n            showDeleteModal: false\n        };\n    },\n\n    computed: {\n        getTitle() {\n            return \"USP \" + this.column.position;\n        },\n\n        sortedColumns() {\n            return this.header.columns.slice().sort((a, b) => a.position - b.position);\n        }\n    },\n\n    methods: {\n        setMediaItem({targetId}) {\n            this.column.iconId = targetId;\n        },\n\n        onUnlinkIcon() {\n            this.column.iconId = null;\n        },\n\n        onDropMedia(dragData) {\n            this.setMediaItem({targetId: dragData.id});\n        },\n\n        onCloseModal() {\n            this.mediaModalIsOpen = false;\n        },\n\n        onOpenMediaModal() {\n            this.mediaModalIsOpen = true;\n        },\n\n        onSelectionChanges(mediaEntity) {\n            const media = mediaEntity[0];\n\n            this.setMediaItem({targetId: media.id})\n        },\n\n        onShowDeleteModal() {\n            this.showDeleteModal = true;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete() {\n            this.onCloseDeleteModal();\n\n            Shopware.State.commit('scopHeaderDetail/setHighlightInvalidColumns', false);\n\n            this.$nextTick(() => {\n\n                while (!this.isLast(this.column)) {\n                    this.onMoveDown(this.column);\n                }\n\n                this.header.columns.remove(this.column.id);\n            });\n        },\n\n        isFirst(column) {\n            return column.position === 1;\n        },\n\n        isLast(column) {\n            return column.position === this.header.columns.length;\n        },\n\n        onMoveUp(column) {\n            const currentPosition = column.position;\n            this.header.columns.forEach(elem => {\n                if (elem.position === currentPosition - 1) {\n                    elem.position++;\n                }\n            })\n            column.position--;\n        },\n        onMoveDown(column) {\n            const currentPosition = column.position;\n            this.header.columns.forEach(elem => {\n                if (elem.position === currentPosition + 1) {\n                    elem.position--;\n                }\n            })\n            column.position++;\n        },\n\n\n    },\n});\n","import scopHeaderState from './page/scop-custom-header-details/state';\n\nimport './page/scop-custom-header-list';\nimport './page/scop-custom-header-details';\nimport './view/scop-custom-header-details-base'\nimport './view/scop-custom-header-details-columns'\nimport './component/scop-custom-header-column-component'\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\n\nShopware.State.registerModule('scopHeaderDetail', scopHeaderState);\n\nShopware.Module.register('scop-custom-header', {\n        type: 'plugin',\n        name: 'scop-custom-header',\n        title: 'scopcustomheader.general.title',\n        description: 'scopcustomheader.general.title',\n        color: '#019994',\n        icon: 'regular-window-terminal',\n        routes: {\n            list: {\n                components: {\n                    default: 'scop-custom-header-list',\n                },\n                path: 'list'\n            },\n            create: {\n                component: 'scop-custom-header-details',\n                path: 'create',\n                redirect: {\n                    name: 'scop.custom.header.create.base',\n                },\n                children: {\n                    base: {\n                        component: 'scop-custom-header-details-base',\n                        path: 'base',\n                        meta: {\n                            parentPath: 'scop.custom.header.list'\n                        },\n                    },\n                }\n            },\n            details: {\n                component: 'scop-custom-header-details',\n                path: 'details/:id?',\n                meta: {\n                    parentPath: 'scop.custom.header.list'\n                },\n                redirect: {\n                    name: 'scop.custom.header.details.base',\n                },\n                children: {\n                    base: {\n                        component: 'scop-custom-header-details-base',\n                        path: 'base'\n                    },\n                    columns: {\n                        component: 'scop-custom-header-details-columns',\n                        path: 'columns'\n                    }\n                },\n                props: {\n                    default: (route) => {\n                        return {\n                            headerId: route.params.id,\n                        }\n                    }\n                }\n            },\n\n        },\n        settingsItem: {\n            group: 'general',\n            to: 'scop.custom.header.list',\n            icon: 'regular-window-terminal',\n            privilege: 'system.system_config',\n        },\n        snippets: {\n            'de-DE': deDE,\n            'en-GB': enGB\n        }\n    }\n);\n","<div>\n    <sw-alert variant=\"info\">\n        {{ $t('scopcustomheader.config.information') }}\n        <sw-internal-link\n                :router-link=\"{ name: 'scop.custom.header.list' }\"\n        >\n            {{ $tc('scopcustomheader.config.link') }}\n        </sw-internal-link>\n    </sw-alert>\n</div>\n","import template from './scop-customheader-config-information.html.twig';\n\nShopware.Component.register('scop-customheader-config-information', {\n    template\n})\n"],"names":["scopHeaderState","state","header","isLoading","highlightInvalidColumns","template$5","Criteria","Mixin","template","criteria","result","records","template$4","Component","State","titleSaveError","messageSaveError","column","exception","languageId","template$3","mapPropertyErrors","template$2","a","b","newColumn","template$1","targetId","dragData","mediaEntity","media","currentPosition","elem","route","deDE","enGB"],"mappings":"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"}