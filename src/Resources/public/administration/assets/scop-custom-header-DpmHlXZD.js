const n={namespaced:!0,state(){return{header:null,isLoading:!1,highlightInvalidColumns:!1}},mutations:{setHeader(e,t){e.header=t},setIsLoading(e,t){e.isLoading=t},setHighlightInvalidColumns(e,t){e.highlightInvalidColumns=t}}},r=`{% block scop_custom_header_list %} <sw-page class="scop-custom-header-list"> <template #smart-bar-actions> {% block scop_custom_header_list_smarbar %} <mt-button variant="primary" @click="$router.push({name: 'scop.custom.header.create'})"> {{ $t('scopcustomheader.list.createButton') }} </mt-button> {% endblock %} </template> <template #content> {% block scop_custom_header_list_content %} <sw-entity-listing v-if="header" :items="header" :repository="repository" :columns="columns" detailRoute="scop.custom.header.details" @update-records="onUpdate" > <template #column-salesChannel="{ item }"> {{ item.salesChannel ? item.salesChannel.translated.name : $tc('scopcustomheader.list.allSalesChannels') }} </template> </sw-entity-listing> {% endblock %} </template> </sw-page> {% endblock %}`,d=Shopware.Data.Criteria,{Mixin:c}=Shopware;Shopware.Component.register("scop-custom-header-list",{template:r,inject:["repositoryFactory","syncService","loginService"],mixins:[c.getByName("notification")],data(){return{repository:null,header:null,noHeader:!0,page:1,limit:25}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"label",dataIndex:"label",label:this.$tc("scopcustomheader.list.label"),routerLink:"scop.custom.header.details",inlineEdit:"string",allowResize:!0,primary:!0},{property:"enabled",dataIndex:"enabled",label:this.$tc("scopcustomheader.list.columnEnabled"),inlineEdit:"boolean"},{property:"salesChannel",dataIndex:"salesChannel",label:this.$tc("scopcustomheader.list.salesChannel"),allowResize:!0}]}},created(){this.repository=this.repositoryFactory.create("scop_custom_header");let e=new d(this.page,this.limit);e.addAssociation("salesChannel"),this.repository.search(e,Shopware.Context.api).then(t=>{this.header=t})},methods:{updateList(){const e=this.header.criteria;this.repository.search(e,Shopware.Context.api).then(t=>{this.header=t})},onUpdate(e){this.noHeader=e.length===0}}});const u=`{% block scop_custom_header_details %} <sw-page class="scop-custom-header-details"> {% block sw_product_detail_header %} <template #smart-bar-header> <h2> {{ placeholder(header, 'label', $tc('scopcustomheader.detail.newHeader')) }} </h2> </template> {% endblock %} <template #language-switch> <sw-language-switch :save-changes-function="saveOnLanguageChange" :abort-change-function="abortOnLanguageChange" :disabled="!headerId" @on-change="onChangeLanguage"/> </template> <template #smart-bar-actions> <mt-button variant="secondary" @click="$router.push({name: 'scop.custom.header.list'})"> {{ $t('scopcustomheader.detail.cancelButton') }}</mt-button> <sw-button-process :isLoading="isLoading" :processSuccess="processSuccess" variant="primary" @update:processSuccess="saveFinish" @click="onClickSave"> {{ $t('scopcustomheader.detail.saveButton') }}</sw-button-process> </template> <template #content> <sw-card-view> <sw-language-info :entity-description="placeholder(header, 'label', $tc('scopcustomheader.detail.newHeader'))" :is-new-entity="!headerId" /> <sw-tabs v-if="!isCreateMode" position-identifier="scop-custom-header-details" > <sw-tabs-item :route="{ name: 'scop.custom.header.details.base', params: { id: $route.params.id } }" :title="$tc('scopcustomheader.detail.tabs.tabGeneral')" > {{ $tc('scopcustomheader.detail.tabs.tabGeneral') }} </sw-tabs-item> <sw-tabs-item :route="{ name: 'scop.custom.header.details.columns', params: { id: $route.params.id } }" :title="$tc('scopcustomheader.detail.tabs.tabColumns')" :hasError="highlightInvalidColumns" > {{ $tc('scopcustomheader.detail.tabs.tabColumns') }} </sw-tabs-item> </sw-tabs> <div v-if="isLoading" > <sw-skeleton/> <sw-skeleton/> <sw-skeleton/> </div> <template v-else> <router-view v-slot="{ Component }"> <component :is="Component" :header="header" :is-create-mode="isCreateMode" ></component> </router-view> </template> </sw-card-view> </template> </sw-page> {% endblock %}`,{Component:m,Mixin:s,State:l}=Shopware,{Criteria:i}=Shopware.Data;m.register("scop-custom-header-details",{template:u,inject:["repositoryFactory","entityValidationService"],mixins:[s.getByName("notification"),s.getByName("placeholder")],props:{headerId:{type:String,required:!1,default(){return null}}},metaInfo(){return{title:this.$createTitle()}},data(){return{header:null,isLoading:!1,processSuccess:!1}},watch:{headerId(){this.getHeader()}},created(){this.isCreateMode&&(l.getters["context/isSystemDefaultLanguage"]||l.commit("context/resetLanguageToDefault")),this.getHeader()},computed:{isCreateMode(){return this.$route.name==="scop.custom.header.create.base"},headerRepository(){return this.repositoryFactory.create("scop_custom_header")},highlightInvalidColumns:{get(){return l.get("scopHeaderDetail").highlightInvalidColumns},set(e){l.commit("scopHeaderDetail/setHighlightInvalidColumns",e)}}},methods:{getHeader(){if(this.isLoading=!0,!this.headerId){this.header=this.headerRepository.create(),this.header.label="",this.header.priority=1,this.header.height=10,this.header.background="#ffffff",this.header.textFontSize=10,this.header.textColor="#000000",this.header.hover="#14b79f",this.header.paddingTop=10,this.header.paddingBottom=10,this.header.paddingLeft=10,this.header.paddingRight=10,this.header.mobileCarouselSpeed=5,this.isLoading=!1;return}this.loadEntity()},loadEntity(){const e=new i(1,1).addAssociation("columns");if(e.getAssociation("columns").addSorting(i.sort("createdAt","ASC")),!!this.headerId)return this.headerRepository.get(this.headerId,Shopware.Context.api,e).then(t=>{t!==null&&(this.header=t,!(!this.header||!this.header.columns||this.header.length<1)&&l.commit("scopHeaderDetail/setHeader",this.header))}).finally(()=>{this.isLoading=!1})},onClickSave(){if(!this.headerId){this.createHeader();return}this.saveHeader()},createHeader(){return this.saveHeader().then(()=>{this.processSuccess&&this.$router.push({name:"scop.custom.header.details",params:{id:this.header.id}})})},saveHeader(){if(this.isLoading=!0,!this.entityValidationService.validate(this.header)){const e=this.$tc("global.default.error"),t=this.$tc("global.notification.notificationSaveErrorMessageRequiredFieldsInvalid");return this.createNotificationError({title:e,message:t}),this.isLoading=!1,Promise.resolve()}for(let e of this.header.columns)if((e.translated.label==null||e.translated.label==="")&&(e.label==null||e.label==="")&&e.translated.iconId==null&&e.iconId==null){const t=this.$tc("global.default.error"),a=this.$tc("scopcustomheader.detail.columns.invalidSave");return this.createNotificationError({title:t,message:a}),this.isLoading=!1,this.highlightInvalidColumns=!0,Promise.resolve()}return this.highlightInvalidColumns=!1,this.headerRepository.save(this.header).then(()=>{this.processSuccess=!0,this.loadEntity()}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("scopcustomheader.general.errorTitle"),message:e})})},saveFinish(){this.processSuccess=!1},abortOnLanguageChange(){return this.headerRepository.hasChanges(this.header)},saveOnLanguageChange(){return this.saveHeader()},onChangeLanguage(e){l.commit("context/setApiLanguageId",e),this.getHeader()}}});const p=`<div> <sw-card :title="$tc('scopcustomheader.detail.general')" v-if="header" :is-loading="isLoading"> <sw-container columns="3fr 1fr 1fr" gap="16px"> <sw-text-field :label="$t('scopcustomheader.detail.label')" v-model:value="header.label" validation="required" required :error="headerLabelError"></sw-text-field> <sw-number-field :label="$t('scopcustomheader.detail.priority')" v-model:value="header.priority" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false" required :error="headerPriorityError"></sw-number-field> <sw-switch-field :label="$tc('scopcustomheader.detail.enabledLabel')" v-model:value="header.enabled" validation="required" bordered></sw-switch-field> </sw-container> <mt-textarea :label="$t('scopcustomheader.detail.description')" v-model="header.description"></mt-textarea> <sw-entity-single-select v-model:value="header.salesChannelId" entity="sales_channel" :resetOption="$t('scopcustomheader.detail.salesChannel.all')" :label="$t('scopcustomheader.detail.salesChannel.select')"></sw-entity-single-select> </sw-card> <sw-card :title="$tc('scopcustomheader.detail.settingsDesktop')" v-if="header" :isLoading="isLoading"> <sw-number-field :label="$t('scopcustomheader.detail.height')" v-model:value="header.height" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-container columns="1fr 1fr 1fr" gap="16px"> <mt-colorpicker :label="$t('scopcustomheader.detail.backgroundColor')" v-model="header.background" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" zIndex="100"></mt-colorpicker> <mt-colorpicker :label="$t('scopcustomheader.detail.hoverColor')" v-model="header.hover" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" zIndex="100"></mt-colorpicker> <mt-colorpicker :label="$t('scopcustomheader.detail.textColor')" v-model="header.textColor" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" zIndex="100"></mt-colorpicker> </sw-container> <sw-number-field :label="$t('scopcustomheader.detail.fontSize')" v-model:value="header.textFontSize" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-container columns="1fr 1fr 1fr 1fr" gap="16px"> <sw-number-field :label="$t('scopcustomheader.detail.paddingTop')" v-model:value="header.paddingTop" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.paddingRight')" v-model:value="header.paddingRight" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.paddingBottom')" v-model:value="header.paddingBottom" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.paddingLeft')" v-model:value="header.paddingLeft" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>px</span> </template> </sw-number-field> </sw-container> </sw-card> <sw-card :title="$tc('scopcustomheader.detail.settingsMobile')" v-if="header" :isLoading="isLoading"> <sw-switch-field :label="$tc('scopcustomheader.detail.mobileBreakpointCarouselLabel')" v-model:value="header.mobileBreakpointCarousel" validation="required" bordered></sw-switch-field> <sw-number-field :label="$t('scopcustomheader.detail.mobileCarouselSpeedLabel')" v-model:value="header.mobileCarouselSpeed" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :allowEmpty="false"> <template #suffix> <span>s</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.height')" v-model:value="header.heightMobile" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :placeholder="header.height"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-container columns="1fr 1fr 1fr" gap="16px"> <mt-colorpicker :label="$t('scopcustomheader.detail.backgroundColor')" v-model="header.backgroundColorMobile" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :z-index="100" /> <mt-colorpicker :label="$t('scopcustomheader.detail.hoverColor')" v-model="header.hoverColorMobile" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :z-index="100" /> <mt-colorpicker :label="$t('scopcustomheader.detail.textColor')" v-model="header.textColorMobile" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :z-index="100" /> </sw-container> <sw-number-field :label="$t('scopcustomheader.detail.fontSize')" v-model:value="header.textFontSizeMobile" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :placeholder="header.textFontSize"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-container columns="1fr 1fr 1fr 1fr" gap="16px"> <sw-number-field :label="$t('scopcustomheader.detail.paddingTop')" v-model:value="header.paddingTopMobile" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :placeholder="header.paddingTop"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.paddingRight')" v-model:value="header.paddingRightMobile" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :placeholder="header.paddingRight"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.paddingBottom')" v-model:value="header.paddingBottomMobile" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :placeholder="header.paddingBottom"> <template #suffix> <span>px</span> </template> </sw-number-field> <sw-number-field :label="$t('scopcustomheader.detail.paddingLeft')" v-model:value="header.paddingLeftMobile" numberType="int" :step="1" :min="0" :value="1" :fillDigits="true" :placeholder="header.paddingLeft"> <template #suffix> <span>px</span> </template> </sw-number-field> </sw-container> </sw-card> </div>`,{Component:h,Mixin:b}=Shopware,{mapPropertyErrors:g}=Shopware.Component.getComponentHelper();h.register("scop-custom-header-details-base",{template:p,mixins:[b.getByName("placeholder")],props:{header:{type:Object,required:!1,default(){return null}},isLoading:{type:Boolean,required:!1,default:!1},isCreateMode:{type:Boolean,required:!0}},computed:{...g("header",["label","priority"])},data(){return{processSuccess:!1}}});const f=`<div> <ul class="scopcustomheader-details-columns__column-list"> <scop-custom-header-column-component v-for="column in sortedColumns" :key="column.id" :header="header" :column="column" :error="highlightInvalidColumns && hasError(column)" @column-delete="deleteColumn" > </scop-custom-header-column-component> </ul> <div class="scopcustomheader-details-columns__action_add"> <mt-button v-tooltip="{ message: $tc('scopcustomheader.detail.columns.buttonAddColumnDisabled'), disabled: isSystemLanguage, showOnDisabledElements: true }" :disabled="!isSystemLanguage" :is-loading="isLoading" @click="onAddColumn"> {{ $tc('scopcustomheader.detail.columns.buttonAddColumn') }} </mt-button> </div> </div>`,{Component:v,Mixin:w,State:o}=Shopware;v.register("scop-custom-header-details-columns",{template:f,inject:["repositoryFactory"],mixins:[w.getByName("placeholder")],computed:{header(){return o.get("scopHeaderDetail").header},isLoading:{get(){return o.get("scopHeaderDetail").isLoading},set(e){o.commit("scopHeaderDetail/setIsLoading",e)}},highlightInvalidColumns:{get(){return o.get("scopHeaderDetail").highlightInvalidColumns},set(e){o.commit("scopHeaderDetail/setHighlightInvalidColumns",e)}},columns(){return o.get("scopHeaderDetail").header&&o.get("scopHeaderDetail").header.columns},sortedColumns(){return[...this.columns].sort((e,t)=>e.position-t.position)},isSystemLanguage(){return console.log(Shopware.Context.api),Shopware.Context.api.systemLanguageId===Shopware.Context.api.languageId}},methods:{onAddColumn(){const t=this.repositoryFactory.create(this.columns.entity,this.columns.source).create();t.headerId=this.header.id,t.position=this.columns.length+1,t.showDesktop=!0,t.showMobile=!0,t.translated={},this.highlightInvalidColumns=!1,this.columns.push(t)},deleteColumn(e){if(e.isNew()){this.columns.remove(e.id);return}this.isLoading=!0,this.repositoryFactory.create(this.columns.entity,this.columns.source).delete(e.id,this.columns.context).then(()=>{this.columns.remove(e.id),this.isLoading=!1})},sortColumns(){return[...this.columns].sort((e,t)=>e.position-t.position)},hasError(e){return(e.translated.label==null||e.translated.label==="")&&(e.label==null||e.label==="")&&e.translated.iconId==null&&e.iconId==null}}});const C=`<sw-card :title="getTitle" position-identifier="scop-custom-header-column-component" :class="error ? 'scop-has--error' : ''"> <sw-context-button class="scop-custom-header-column-component__context-button"> <sw-context-menu-item variant="danger" @click="onShowDeleteModal" > {{ $tc('scopcustomheader.detail.columns.buttonDeleteColumn') }} </sw-context-menu-item> <sw-context-menu-item variant="default" v-if="!isFirst(column)" @click="onMoveUp(column)" > {{ $tc('scopcustomheader.detail.columns.buttonMoveUp') }} </sw-context-menu-item> <sw-context-menu-item variant="default" v-if="!isLast(column)" @click="onMoveDown(column)" > {{ $tc('scopcustomheader.detail.columns.buttonMoveDown') }} </sw-context-menu-item> </sw-context-button> <sw-container columns="1fr 1fr" gap="16px"> <sw-text-field :label="$t('scopcustomheader.detail.columns.label')" v-model:value="column.label" :placeholder="column.translated.label" validation="required"></sw-text-field> <sw-text-field :label="$t('scopcustomheader.detail.columns.textLink')" v-model:value="column.textLink" :placeholder="column.translated.textLink" validation="required"></sw-text-field> </sw-container> <sw-upload-listener :upload-tag="column.id" auto-upload @media-upload-finish="setMediaItem" ></sw-upload-listener> <sw-media-upload-v2 :source="column.iconId" :allow-multi-select="false" :upload-tag="column.id" :label="$t('scopcustomheader.detail.columns.mediaUpload')" @sw-media-upload-v2-media-upload-success="setMediaItem" @media-drop="onDropMedia" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onUnlinkIcon" ></sw-media-upload-v2> <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :allow-multi-select="false" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" ></sw-media-modal-v2> <sw-switch-field :label="$t('scopcustomheader.detail.columns.openInNewTab')" v-model:value="column.openInNewTab" validation="required"></sw-switch-field> <sw-checkbox-field v-model:value="column.showDesktop" :label="$t('scopcustomheader.detail.columns.showDesktopLabel')"></sw-checkbox-field> <br /> <sw-checkbox-field v-model:value="column.showMobile" :label="$t('scopcustomheader.detail.columns.showMobileLabel')"></sw-checkbox-field> <sw-modal v-if="showDeleteModal" variant="small" :title="$tc('scopcustomheader.detail.columns.delete.confirmTitle')" @modal-close="onCloseDeleteModal" > <p> {{ $tc('scopcustomheader.detail.columns.delete.confirmText') }} </p> <template #modal-footer> <mt-button variant="secondary" size="small" @click="onCloseDeleteModal" > {{ $tc('scopcustomheader.detail.columns.delete.buttonCancel') }} </mt-button> <mt-button size="small" variant="critical" @click="onConfirmDelete" > {{ $tc('scopcustomheader.detail.columns.delete.buttonDelete') }} </mt-button> </template> </sw-modal> </sw-card>`;Shopware.Component.register("scop-custom-header-column-component",{template:C,inject:["repositoryFactory"],props:{header:{type:Object,required:!0},column:{type:Object,required:!0},error:{type:Boolean,required:!1,default:!1}},data(){return{isLoading:!1,mediaItem:null,mediaModalIsOpen:!1,showDeleteModal:!1}},computed:{getTitle(){return"USP "+this.column.position},sortedColumns(){return this.header.columns.slice().sort((e,t)=>e.position-t.position)}},methods:{setMediaItem({targetId:e}){this.column.iconId=e},onUnlinkIcon(){this.column.iconId=null},onDropMedia(e){this.setMediaItem({targetId:e.id})},onCloseModal(){this.mediaModalIsOpen=!1},onOpenMediaModal(){this.mediaModalIsOpen=!0},onSelectionChanges(e){const t=e[0];this.setMediaItem({targetId:t.id})},onShowDeleteModal(){this.showDeleteModal=!0},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(){this.onCloseDeleteModal(),Shopware.State.commit("scopHeaderDetail/setHighlightInvalidColumns",!1),this.$nextTick(()=>{for(;!this.isLast(this.column);)this.onMoveDown(this.column);this.header.columns.remove(this.column.id)})},isFirst(e){return e.position===1},isLast(e){return e.position===this.header.columns.length},onMoveUp(e){const t=e.position;this.header.columns.forEach(a=>{a.position===t-1&&a.position++}),e.position--},onMoveDown(e){const t=e.position;this.header.columns.forEach(a=>{a.position===t+1&&a.position--}),e.position++}}});const y={config:{information:"Die Konfiguration des Plugins wurde verschoben. Die Konfiguration des Header kann nun in den Einstellungen vorgenommen werden:",link:"Einstellungen -> Shop -> Individueller Header"},general:{title:"Individueller Header",errorTitle:"Fehler"},list:{createButton:"Header erstellen",label:"Name",columnEnabled:"Aktiv",salesChannel:"Verkaufskanal",allSalesChannels:"Alle"},detail:{cancelButton:"Abbrechen",saveButton:"Speichern",label:"Name",description:"Beschreibung",validFrom:"Gültig ab",validFromPlaceholder:"Wähle ein Startdatum",validUntil:"Gültig bis",validUntilPlaceholder:"Wähle ein Enddatum",salesChannel:{select:"Verkaufskanal auswählen",all:"Alle"},priority:"Priorität",enabledLabel:"Aktiv",general:"Allgemein",settingsDesktop:"Desktop",settingsMobile:"Mobile",height:"Höhe der Leiste",backgroundColor:"Hintergrundfarbe",fontSize:"Schriftgröße",hoverColor:"Hover Farbe",textColor:"Textfarbe",paddingTop:"Abstand oben",paddingRight:"Abstand rechts",paddingBottom:"Abstand unten",paddingLeft:"Abstand links",tabs:{tabGeneral:"Allgemein",tabColumns:"Spalten"},columns:{buttonAddColumn:"Spalte hinzufügen",buttonAddColumnDisabled:"Spalten können nur in der Standardsprache hinzugefügt werden",label:"Name",textLink:"Link",openInNewTab:"Link in einem neuen Tab öffnen",showMobileLabel:"Spalte auf dem Handy anzeigen",showDesktopLabel:"Spalte auf dem Desktop anzeigen",mediaUpload:"Icon",buttonDeleteColumn:"Spalte entfernen",delete:{confirmTitle:"Spalte entfernen",confirmText:"Möchtest Du diese Spalte wirklich aus dem Header entfernen?",buttonCancel:"Abbrechen",buttonDelete:"Spalte entfernen"},buttonMoveUp:"Nach oben",buttonMoveDown:"Nach unten",invalidSave:"Jede Spalte muss entweder einen Namen oder ein Icon besitzen!"},mobileBreakpointCarouselLabel:"In der mobilen Version die Info-Leiste als Karussell darstellen.",mobileCarouselSpeedLabel:"Geschwindigkeit des Karussells",newHeader:"Neuer individueller Header"}},x={scopcustomheader:y},S={config:{information:"The Configuration of this plugin was moved. You can now configure you header in the settings:",link:"Settings -> Shop -> Custom Header"},general:{title:"Custom Header",errorTitle:"Error"},list:{createButton:"Create header",label:"Name",columnEnabled:"Enabled",salesChannel:"Sales channel",allSalesChannels:"All"},detail:{cancelButton:"Cancel",saveButton:"Save",label:"Name",description:"Description",validFromLabel:"Valid from",validFromPlaceholder:"Select start date",validUntilLabel:"Valid until",validUntilPlaceholder:"Select end date",salesChannel:{select:"Select SalesChannel",all:"All"},priority:"Priority",enabledLabel:"Enabled",general:"General",settingsDesktop:"Desktop",settingsMobile:"Mobile",height:"Header height",backgroundColor:"Background color",fontSize:"Font size",hoverColor:"Hover color",textColor:"Text color",paddingTop:"Padding top",paddingRight:"Padding right",paddingBottom:"Padding bottom",paddingLeft:"Padding left",tabs:{tabGeneral:"General",tabColumns:"Columns"},columns:{buttonAddColumn:"Add column",buttonAddColumnDisabled:"Columns can only be added in the default language",label:"Name",textLink:"Link",openInNewTab:"Open link in new window",showMobileLabel:"Show column on mobile",showDesktopLabel:"Show column on desktop",mediaUpload:"Icon",buttonDeleteColumn:"Delete column",delete:{confirmTitle:"Delete column",confirmText:"Do you really want to remove this column from the header?",buttonCancel:"Cancel",buttonDelete:"Delete column"},buttonMoveUp:"Move up",buttonMoveDown:"Move down",invalidSave:"Every column must at least consist of either a name or an icon"},mobileBreakpointCarouselLabel:"Display the info bar as a carousel in the mobile version.",mobileCarouselSpeedLabel:"Carousel Speed",newHeader:"New Custom Header"}},k={scopcustomheader:S};Shopware.State.registerModule("scopHeaderDetail",n);Shopware.Module.register("scop-custom-header",{type:"plugin",name:"scop-custom-header",title:"scopcustomheader.general.title",description:"scopcustomheader.general.title",color:"#019994",icon:"regular-window-terminal",routes:{list:{components:{default:"scop-custom-header-list"},path:"list"},create:{component:"scop-custom-header-details",path:"create",redirect:{name:"scop.custom.header.create.base"},children:{base:{component:"scop-custom-header-details-base",path:"base",meta:{parentPath:"scop.custom.header.list"}}}},details:{component:"scop-custom-header-details",path:"details/:id?",meta:{parentPath:"scop.custom.header.list"},redirect:{name:"scop.custom.header.details.base"},children:{base:{component:"scop-custom-header-details-base",path:"base"},columns:{component:"scop-custom-header-details-columns",path:"columns"}},props:{default:e=>({headerId:e.params.id})}}},settingsItem:{group:"general",to:"scop.custom.header.list",icon:"regular-window-terminal",privilege:"system.system_config"},snippets:{"de-DE":x,"en-GB":k}});const L=`<div> <sw-alert variant="info"> {{ $t('scopcustomheader.config.information') }} <sw-internal-link :router-link="{ name: 'scop.custom.header.list' }" > {{ $tc('scopcustomheader.config.link') }} </sw-internal-link> </sw-alert> </div>`;Shopware.Component.register("scop-customheader-config-information",{template:L});
//# sourceMappingURL=scop-custom-header-DpmHlXZD.js.map
